#!/usr/bin/env bash
set -euo pipefail

function prelude() {

TEST_PATH="$(readlink -f $1)"

PRUNE_TEST="${TEST_PATH##*/test/}}"
PRUNE_EXAMPLE="${PRUNE_TEST##*/example/}}"

WORKSPACE="${PRUNE_EXAMPLE%.*}"

cat >> .bazelrc <<EOF
startup --max_idle_secs=1
build --announce_rc
build --show_timestamps
EOF

cp "$BAZEL_WORKSPACE_ROOT/.bazeliskrc" .

cp "$BAZEL_WORKSPACE_ROOT/.common.bazelrc" .bazelrc

cat > WORKSPACE.bazel <<EOF
workspace(name = "$WORKSPACE")

local_repository(
    name = "skytest",
    path = "$BAZEL_WORKSPACE_ROOT",
)

local_repository(
    name = "rules_cc",
    path = "$BAZEL_EXTERNAL_DIR/rules_cc",
)
local_repository(
    name = "bazel_bootlin",
    path = "$BAZEL_EXTERNAL_DIR/bazel_bootlin",
)

load("@bazel_bootlin//:defs.bzl", "bootlin_toolchain")

CXX_STANDARD = ["-std=c++17"]

COMMON_CXX_WARNINGS = [
    "-Werror",
    "-Wall",
    "-Wextra",
    "-Wpedantic",
    "-Wconversion",
    "-Wnon-virtual-dtor",
    "-Wold-style-cast",
    "-Wcast-align",
    "-Wunused",
    "-Woverloaded-virtual",
    "-Wmisleading-indentation",
    "-Wnull-dereference",
    "-Wdouble-promotion",
    "-Wformat=2",
    "-Wimplicit-fallthrough",
]

bootlin_toolchain(
    name = "gcc_toolchain",
    # x86-64-v3 should cover CPUs released after ~2015.
    # see https://www.phoronix.com/news/GCC-11-x86-64-Feature-Levels.
    architecture = "x86-64-v3",
    # see https://toolchains.bootlin.com/releases_x86-64-v3.html
    buildroot_version = "bleeding-edge-2023.08-1",
    extra_cxx_flags = [
        "-fdiagnostics-color=always",
        "-Wduplicated-cond",
        "-Wduplicated-branches",
        "-Wlogical-op",
        "-Wuseless-cast",
        "-Wshadow=compatible-local",
    ] + COMMON_CXX_WARNINGS + CXX_STANDARD,
    libc_impl = "glibc",
)

register_toolchains(
    "@gcc_toolchain//:toolchain",
)
EOF

cat >BUILD.bazel <<EOF
load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")

# include_prefix doesn't appear to work with Bazel 7
cc_library(
    name = "external_skytest",
    includes = ["external"],
    deps = ["@skytest"],
)
EOF

}

function bazel() {

XDG_CACHE_HOME="$XDG_CACHE_HOME" \
  $BAZEL_BIN --nosystem_rc --nohome_rc $@

}

load("@bazel_clang_format//:defs.bzl", "clang_format_update")
load("@bazel_clang_tidy//:defs.bzl", "clang_tidy_apply_fixes")
load("@buildifier_prebuilt//:rules.bzl", "buildifier")

clang_format_update(
    name = "clang-format",
    binary = "@llvm_toolchain//:clang-format",
    config = "//:format_config",
)

clang_tidy_apply_fixes(
    name = "clang-tidy-fix",
    apply_replacements_binary = "@llvm_toolchain//:clang-apply-replacements",
    tidy_binary = "@llvm_toolchain//:clang-tidy",
    tidy_config = "//:tidy_config",
)

buildifier(
    name = "buildifier.check",
    lint_mode = "warn",
    mode = "check",
)

buildifier(
    name = "buildifier.fix",
    lint_mode = "warn",
    mode = "fix",
)

genrule(
    name = "gen_verbose_clang_tidy",
    srcs = [],
    outs = ["verbose-clang-tidy.sh"],
    # echo "$(dirname bazel-out/k8-fastbuild/bin/tools/verbose-clang-tidy.sh)/../<tidy-path>) ..."
    cmd = """
echo "$$(dirname $@)/../$(rootpath {tidy}) --enable-check-profile \\$$@" > $@
""".format(
        tidy = "@llvm_toolchain//:clang-tidy",
    ),
    executable = True,
    tools = ["@llvm_toolchain//:clang-tidy"],
)

sh_binary(
    name = "verbose-clang-tidy",
    srcs = ["verbose-clang-tidy.sh"],
    data = ["@llvm_toolchain//:clang-tidy"],
)
